version: '3.3'
name: "monolith"
services:
    frontend:
        image: mentalsmoge/frontend:latest
        container_name: monolith_frontend
        environment:
            NODE_ENV: development
            WATCHPACK_POLLING: "true"
        build: frontend/
        volumes:
            - ./frontend:/app_frontend
            # - ./frontend/node_modules:/app_frontend/node_modules
            - /app_frontend/node_modules
        ports:
            - "3000:5173"
        depends_on:
            - backend
        networks:
            - app-network
        command: sh -c "npm install && npm run dev"
    backend:
        image: mentalsmoge/backend:latest
        container_name: monolith_backend
        build: backend/
        depends_on:
            - user_db
        ports:
            - "8080:8080"
            - "8082:8082"
        environment:
            - RETHINKDB_HOST=${RETHINKDB_HOST}
            - RETHINKDB_PORT=${RETHINKDB_PORT}
            - RETHINKDB_NAME=${RETHINKDB_NAME}
            - DB_HOST=user_db
            - DB_USER=${DB_USER}
            - DB_PASSWORD=${DB_PASSWORD}
            - DB_NAME=${DB_NAME}
            - DB_PORT=5432
        volumes:
            - images_volume:/app_backend/public/images
            # - ./backend:/app_backend
            # - /app_backend/node_modules
        networks:
            - app-network
    user_db:
        container_name: monolith_user_db
        image: postgres:17-alpine
        volumes:
            - postgres-data:/var/lib/postgresql/data
            - .backend/init.sql:/docker-entrypoint-initdb.d/init.sql
        environment:
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_PASSWORD=${DB_PASSWORD}
            - POSTGRES_DB=${DB_NAME}
        networks:
            - app-network
        ports:
            - "5432:5432"

volumes:
    postgres-data:
    images_volume:
networks:
    app-network:
        driver: bridge
